{"answers": [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, {"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, {"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, {"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}], "K_means_clustering_result": [[[{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.0", 0], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.28876102715730667", 1], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, "0.28876102715730667", 1], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.0", 2], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.0", 3], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.0", 4]], [[{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.28876102715730667", 1], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, "0.28876102715730667", 1], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.0", 0], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.0", 2], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.0", 3], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.0", 4]], [[{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.28876102715730667", 1], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.0", 0], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.0", 2], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.0", 3], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.0", 4]]], "gensim_similarity_tf_idf_code_result": [[{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, "0.31334835"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.20459923"], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.15899915"], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.1445231"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.13779539"], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.105051994"]], "gensim_similarity_tf_idf_body_result": [[{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.35127068"], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.17925894"], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.17606905"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, "0.15168928"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.1433548"], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.026120743"]], "nltk_title_analyze_code_result": [[{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, 166], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, 98], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, 91], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, 88], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, 81], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, 73]], "merge_gensim_nltk_title": [[{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, "0.351270680.351270680.351270680.351270680.351270680.351270680.35127068"], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.179258940.179258940.179258940.179258940.179258940.17925894"], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, "0.176069050.176069050.176069050.176069050.176069050.176069050.176069050.176069050.176069050.176069050.17606905"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, "0.151689280.151689280.151689280.15168928"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.14335480.14335480.14335480.14335480.14335480.14335480.14335480.14335480.14335480.1433548"], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.0261207430.0261207430.0261207430.026120743"]], "merge_gensim_nltk_code": [[{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, "0.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.204599230.20459923"], [{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, "0.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.14452310.1445231"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, "0.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.1050519940.105051994"]], "question": {"question_title": "jQuery how to check if uploaded file is an image without checking extensions?", "question_code": ["<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />\n", "App.Dispatcher.on(\"uploadpic\", function() {         \n        $(\":file\").change(function() {\n            if (this.files && this.files[0] && this.files[0].name.match(/\\.(jpg|jpeg|png|gif)$/) ) {\n                if(this.files[0].size>1048576) {\n                    alert('File size is larger than 1MB!');\n                }\n                else {\n                    var reader = new FileReader();\n                    reader.onload = imageIsLoaded;\n                    reader.readAsDataURL(this.files[0]);\n                }\n            } else alert('This is not an image file!');\n        });\n        function imageIsLoaded(e) {\n            result = e.target.result;\n            $('#image').attr('src', result);\n        };\n    });\n"], "question_body": " Newbie here. The problem is that I currently have written a method which checks uploaded file size and extension in order to validate it. However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type and validate it without using extension method. I have tried to use jQuery file validator but to no avail... This is a snippet from my current code:   Script:   It is called once the upload input changes and after validation it uploads and displays the image. For now, I only care about validation and any help or ideas would be greatly appreciated! "}, "time_now": "2018-04-26 15:44:46", "nltk_title_analyze_title_result": [[{"answer_votes": "8", "answer_comments": null, "answer_body": " You don't need jquery here.  var mimeType=this.files[0]['type'];//mimeType=image/jpeg or application/pdf etc...\n\n\n//ie image/jpeg will be ['image','jpeg'] and we keep the first value\n    if(mimeType.split('/')[0]=='image'){\n       console.log('the file is image');\n    }  You can also create a function to check when a file is image.  function isImage(file){\n   return file['type'].split('/')[0]=='image');//returns true or false\n}\n\n isImage(this.file[0]); ", "question_id": 29805909}, 11], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Here is a quick tip if you just want to know if the file is a image:  var file = this.files[0];\nvar fileType = file[\"type\"];\n\nif (fileType.search('image') >= 0) {\n  ...\n} ", "question_id": 29805909}, 10], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Pls refer a related query here . The answer here suggests to load the image in an Image object and check for it's width and height properties to be non zero.\nI think the technique can be used to solve your problem too.  I also worked out a fiddle for you to refer. Pertinent code below:  var img = new Image();\nimg.addEventListener(\"load\",function(){\n  alert('success');\n});\nimg.addEventListener(\"error\",function(){\n      alert('error');\n});\n  img.src = picFile.result; ", "question_id": 29805909}, 7], [{"answer_votes": "1", "answer_comments": [" Somehow I managed to miss this .type thingy, no sophisticated methods are needed, this works great, thank you (: \u2013 Acallar  Apr 23 '15 at 7:29 ", " Just curious. As per your original question \"However, checking extensions is not a solution as that kind of validation may cause a lot of problems. What I want to do is to check the actual file type\": - Want to check whether the type attribute really returns anything other than checking the extension internally. Since, while I was attempting to answer the OP, i found that when i renamed a text file to a.png and uploaded it, the type attribute check for image was a success even though the actual file wasn't one. \u2013 sujit  Apr 24 '15 at 4:39  "], "answer_body": "  What I want to do is to check the actual file type   Try accessing files[0].type property . See Using files from web applications    $(\":file\").on(\"change\", function(e) {\r\n\r\n  console.log(this.files[0].type);\r\n  \r\n})  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\r\n<input type='file' id='imageLoader' name='imageLoader' accept=\"image/*\" data-type='image' />    ", "question_id": 29805909}, 6], [{"answer_votes": "30", "answer_comments": [" God, why I haven't thought about this? So simple, yet works perefectly, thank you! \u2013 Acallar  Apr 23 '15 at 7:28 ", " You shouldn't use capital letters to start a variable's name in Javascript. \u2013 Yonn Trimoreau  Mar 8 '16 at 15:46 ", " When I tried the same for docx extension files then file type is empty. Can you tell why it is and how I can check this ? \u2013 Varinder  Nov 28 '16 at 14:03 ", " @Varinder may be you can post a question on what you tried? This should be able to work with Microsoft Word documents as well. \u2013 Hoyen  Nov 28 '16 at 14:26 "], "answer_body": " Try something like this:  var file = this.files[0];\nvar fileType = file[\"type\"];\nvar ValidImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\nif ($.inArray(fileType, ValidImageTypes) < 0) {\n     // invalid file type code goes here.\n} ", "question_id": 29805909}, 4], [{"answer_votes": "0", "answer_comments": null, "answer_body": " var file = this.files[0]; var fileType = file[\"type\"]; var SupportedTypes= [\"image/gif\", \"image/jpeg\", \"image/png\"]; if ((SupportedTypes.indexOf(fileType))!=-1) { // File Format is of type Image } ", "question_id": 29805909}, 4]], "question_id": 29805909}