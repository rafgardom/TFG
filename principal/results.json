{"answers": [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, {"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, {"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, {"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, {"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, {"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, {"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, {"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, {"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}], "K_means_clustering_result": [[[{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.24791090190410614", 0], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.24791090190410614", 0], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.0", 1], [{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.0", 4]], [[{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.24791090190410614", 0], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.24791090190410614", 0], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.0", 1], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.0", 4]], [[{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.28014604933559895", 2], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.24791090190410614", 0], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.15155542641878128", 3], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.0", 1], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.0", 4]]], "gensim_similarity_tf_idf_code_result": [[{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.36858103"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.108763576"], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.064650305"], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.06459591"], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.038305294"], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.027958546"], [{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.027744103"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.018082356"], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.012910805"], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.008641137"]], "gensim_similarity_tf_idf_body_result": [[{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.26568383"], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.25607815"], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.13923302"], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.12169909"], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.11292748"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.024911843"], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.022573039"], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.013082947"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.008657642"], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.0015102205"]], "nltk_title_analyze_code_result": [[{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, 81], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, 44], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, 28], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, 22], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, 15], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, 13], [{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, 11], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, 8], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, 8], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, 4]], "merge_gensim_nltk_title": [[{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.265683830.26568383"], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.139233020.13923302"], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.121699090.12169909"], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.112927480.112927480.112927480.112927480.112927480.112927480.112927480.112927480.112927480.11292748"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.0249118430.024911843"], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.0225730390.022573039"], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.0130829470.013082947"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.0086576420.008657642"], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.00151022050.00151022050.00151022050.0015102205"]], "merge_gensim_nltk_code": [[{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, "0.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.368581030.36858103"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, "0.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.1087635760.108763576"], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, "0.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.0646503050.064650305"], [{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, "0.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.064595910.06459591"], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, "0.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.0383052940.038305294"], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, "0.0279585460.0279585460.0279585460.0279585460.0279585460.0279585460.0279585460.027958546"], [{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, "0.0277441030.0277441030.0277441030.0277441030.0277441030.0277441030.0277441030.0277441030.0277441030.0277441030.027744103"], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, "0.0180823560.0180823560.0180823560.0180823560.0180823560.0180823560.0180823560.018082356"], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, "0.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.0129108050.012910805"], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, "0.0086411370.0086411370.0086411370.008641137"]], "question": {"question_title": "How to change height of grouped UITableView header?", "question_code": ["- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    if (section == 0){\n        return 0;\n    }\n    return 10;\n}\n"], "question_body": " I know how to change the height of the section headers in the table view.  But I am unable to find any solution to change the default spacing before the first section.  Right now I have this code:   "}, "time_now": "2018-05-03 17:35:17", "nltk_title_analyze_title_result": [[{"answer_votes": "13", "answer_comments": null, "answer_body": " You can try this:  In the loadView  _tableView.sectionHeaderHeight = 0;  Then  -(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{\n    return 0;\n}  It should be removed as long as you do not have any objects in the header...  And if you want some size of the sectionheader, then change only the return value.  same if you do not get the sectionfooter removed.  _tableView.sectionFooterHeight = 0;  and  -(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return 0;\n}  Well, this works for my problems with the tableview in the iOS7. ", "question_id": 17699831}, 58], [{"answer_votes": "184", "answer_comments": [" In Swift,'CGFLOAT_MIN' is unavailable: use CGFloat.min instead. \u2013 tounaobun  Jun 26 '15 at 1:41 ", " CGFloat.min caused a crash, because CGFloat.min returns negative value like -0.0000000000001 \u2013 Pavel Gatilov  Nov 18 '15 at 10:44 ", " Perhaps this is pedantry, but CGFloat.min is not a very small number, it's a very large negative number. If you wanted a very small number you would use epsilon. \u2013 alex bird  Jul 5 '16 at 10:04 ", " In Swift 3 it\u2019s CGFloat.leastNormalMagnitude \u2013 ixany  Nov 12 '16 at 8:49 ", " Advise: Dont use this value on estimatedHeightForHeaderInSection , the app will crash. \u2013 Pedro Paulo Amorim  Sep 8 '17 at 9:22 "], "answer_body": " Return CGFLOAT_MIN instead of 0 for your desired section height.   Returning 0 causes UITableView to use a default value. This is\n  undocumented behavior. If you return a very small number, you\n  effectively get a zero-height header.   Swift 3:  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        if section == 0 {\n            return CGFloat.leastNormalMagnitude\n        }\n        return tableView.sectionHeaderHeight\n    }  Swift:  func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    if section == 0 {\n        return CGFloat.min\n    }\n    return tableView.sectionHeaderHeight\n}  Obj-C:  - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section\n{\n    if (section == 0)\n        return CGFLOAT_MIN;\n    return tableView.sectionHeaderHeight;\n} ", "question_id": 17699831}, 35], [{"answer_votes": "14", "answer_comments": null, "answer_body": " If you use tableView style grouped , tableView automatically set top and bottom insets. To avoid them and avoid internal insets setting, use delegate methods for header and footer. Never return 0.0 but CGFLOAT_MIN .  Objective-C  - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {\n    // Removes extra padding in Grouped style\n    return CGFLOAT_MIN;\n}  Swift  func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n}\n\nfunc tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n    // Removes extra padding in Grouped style\n    return CGFloat.leastNormalMagnitude\n} ", "question_id": 17699831}, 26], [{"answer_votes": "0", "answer_comments": null, "answer_body": " This worked for me with Swift 4 . Modify your UITableView e.g. in viewDidLoad :  // Remove space between sections.\ntableView.sectionHeaderHeight = 0\ntableView.sectionFooterHeight = 0\n\n// Remove space at top and bottom of tableView.\ntableView.tableHeaderView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude)))\ntableView.tableFooterView = UIView(frame: CGRect(origin: .zero, size: CGSize(width: 0, height: CGFloat.leastNormalMagnitude))) ", "question_id": 17699831}, 22], [{"answer_votes": "0", "answer_comments": null, "answer_body": " Example of viewForHeaderInSection:  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\nUIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 118)];\nview.backgroundColor = COLOR_DEFAULT;\n\nNSString* key = [self.tableKeys objectAtIndex:section];\nNSArray *result = (NSArray*)[self.filteredTableData objectForKey:key];\nSZTicketsResult *ticketResult = [result objectAtIndex:0];\n\nUIView *smallColoredView = [[UIView alloc] initWithFrame:CGRectMake(0, 5, 320, 3)];\nsmallColoredView.backgroundColor = COLOR_DEFAULT_KOSTKY;\n[view addSubview:smallColoredView];\n\nUIView *topBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 8, 320, 40)];\ntopBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:topBackgroundView];\n\nUILabel *totalWinnings = [[UILabel alloc] initWithFrame:CGRectMake(10, 8, 300, 40)];\ntotalWinnings.text = ticketResult.message;\ntotalWinnings.minimumFontSize = 10.0f;\ntotalWinnings.numberOfLines = 0;\ntotalWinnings.backgroundColor = [UIColor clearColor];\ntotalWinnings.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:totalWinnings];\n\nUIView *bottomBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 55, 320, 58)];\nbottomBackgroundView.backgroundColor = [UIColor colorWithRed:255.0/255.0 green:248.0/255.0 blue:174.0/255.0 alpha:1];\n[view addSubview:bottomBackgroundView];\n\nUILabel *numberOfDraw = [[UILabel alloc] initWithFrame:CGRectMake(10, 55, 290, 58)];\nnumberOfDraw.text = [NSString stringWithFormat:@\"sometext %@\",[ticketResult.title lowercaseString]];;\nnumberOfDraw.minimumFontSize = 10.0f;\nnumberOfDraw.numberOfLines = 0;\nnumberOfDraw.backgroundColor = [UIColor clearColor];\nnumberOfDraw.font = [UIFont boldSystemFontOfSize:15.0f];\n[view addSubview:numberOfDraw];\n\nreturn view; ", "question_id": 17699831}, 21], [{"answer_votes": "14", "answer_comments": [" This would be better to set height at here: - (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {    return 1.0f; } \u2013 astuter  Oct 22 '13 at 8:09  "], "answer_body": " It appears that I can't set a table header view with height of 0.  I ended up doing the following:  - (void)viewWillAppear:(BOOL)animated{\n    CGRect frame = self.tableView.tableHeaderView.frame;\n    frame.size.height = 1;\n    UIView *headerView = [[UIView alloc] initWithFrame:frame];\n    [self.tableView setTableHeaderView:headerView];\n} ", "question_id": 17699831}, 19], [{"answer_votes": "2", "answer_comments": [" I'm not asking about section headers, but the table header. \u2013 circuitlego  Jul 20 '13 at 0:17 ", " then you can directly pass A uiview to the table header view. \u2013 Divyam shukla  Jul 20 '13 at 5:23 "], "answer_body": " you can use viewForHeaderInSection and return a view with any height.  - (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section\n{\n\n    int height = 30 //you can change the height \n    if(section==0)\n    {\n       UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, height)];\n\n       return view;\n    }\n} ", "question_id": 17699831}, 19], [{"answer_votes": "3", "answer_comments": null, "answer_body": " func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        if YourArray.count <= 0 {\n            let view = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.size.width, height: 0.0))\n            view.backgroundColor = UIColor.clear\n            return view\n        }\n        else {\n            let cell: Header_Cell = self.yourTableview.dequeueReusableCell(withIdentifier: \"Header_Cell\") as! Header_Cell\n            return cell\n        }\n    } ", "question_id": 17699831}, 12], [{"answer_votes": "1", "answer_comments": null, "answer_body": " You should remove the code self.tableView.tableHeaderView = [UIView new]; after you add  - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{\n    return CGFLOAT_MIN;\n} ", "question_id": 17699831}, 10], [{"answer_votes": "2", "answer_comments": null, "answer_body": " In swift 2.0  func tableView(tableView: UITableView, estimatedHeightForHeaderInSection section: Int) -> CGFloat {\n\n        return yourHeight\n    } ", "question_id": 17699831}, 4]], "question_id": 17699831}