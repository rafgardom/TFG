{"question_comments": [" What language you using? \u2013 thecoshman  Apr 15 '10 at 12:33 ", " I guessed that this is a shell syntax question (ie, bash or whatever). \u2013 Pointy  Apr 15 '10 at 12:35 ", " @tripleee - I'm not sure this question is a dup of the cited question. The question in the body seems to be different than the titular digest. Could you take a second look at it? \u2013 jww  3 mins ago  "], "question_title": "echo newline suppression [duplicate]", "answers": [{"answer_votes": "9", "answer_comments": [" it's a shame -- (end of options) isn't supported :( \u2013 extraneon  Apr 15 '10 at 12:37 ", " Following works with bash: echo -e -n\\\\c \u2013 Tino  Dec 1 '10 at 0:57 "], "answer_body": " Because the quotes are processed by the shell and the echo command receives plain -n . If you want to echo -n , you can e.g. printf '%s\\n' -n ", "question_id": 2645174}, {"answer_votes": "2", "answer_comments": null, "answer_body": " you should try to use the more portable printf as far as possible. ", "question_id": 2645174}, {"answer_votes": "2", "answer_comments": null, "answer_body": " You could try  echo -e '\\055n' ", "question_id": 2645174}, {"answer_votes": "2", "answer_comments": null, "answer_body": " I found that the following just works in bash:  echo -n PRINT_THIS  So, you should put -n the first place. ", "question_id": 2645174}, {"answer_votes": "0", "answer_comments": [" Doesn't work for me. Output - -n \u2013 extraneon  Apr 15 '10 at 12:35 ", " For me that does this  > echo - -n - -n \u2013 Greg Reynolds  Apr 15 '10 at 12:35 ", " Hmm, well as I just noted in an edit, it probably varies from shell to shell. \u2013 Pointy  Apr 15 '10 at 12:37 ", " Sorry I didn't get you. Can you explain your point please? \u2013 Happy Mittal  Apr 15 '10 at 12:38 ", " Linux/UNIX systems support multiple command line interpreters (shells). The echo command is usually built in to each of those, and the exact syntax and features can vary.  You're probably using the default shell, bash , which doesn't work like my shell ( zsh ) does. \u2013 Pointy  Apr 15 '10 at 12:41 "], "answer_body": " The quotes don't help because ... ugh, it's hard to explain. The shell strips the quotes off before the \"echo\" command itself is evaluated, so by that time they don't matter.  Try this:  echo - -n  That's not documented as working (I'm running Ubuntu Linux), but echo is almost certainly a built-in to whatever shell you're using, so the man page is questionable anyway. It does work for me. (I'm running zsh because I'm really suave and sophisticated).  edit : well it seems that the bash builtin edit doesn't behave that way. I don't know what to suggest; this:  echo '' -n  will give you \"-n\" preceded by a space, which (depending on what you're doing) might be OK. ", "question_id": 2645174}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Not quiete there:  echo -e 'a-n\\b\\b\\b '\n -n  surprisingly this works:  echo -e '-n\\b'\n-n  and here a solution I can explain:  echo \"foobar\" | sed 's/.*/-n/'\n-n ", "question_id": 2645174}], "question_body": "  This question already has an answer here:    'echo' without newline in a shell script  4 answers     Why doesn't write on terminal although is written within single quotes ? ", "question_code": ["$echo '-n'", "-n", "-n"], "question_id": 2645174}