{"question_comments": [" Have had this happen on some of my projects. To fix this I 'Clean', 'Rebuild', close project and reopen. Then select Tools --> Android --> Sync Project with Gradle Files.  Also have tried the following as well... Close project and physically move the folder to either a new directory or rename the current directory. Now import the project, as if it was new. There are a couple ways to do this, from the initial Android screen, select import and when you locate the Directory, do not import from the project name or master directory, import one level in at 'App'. \u2013 Snappy Cracker  May 3 '17 at 21:07 ", " Readers, before you try anything else which might be complex... just give a try to restarting android studio. \u2013 eRaisedToX  May 30 '17 at 5:28  "], "question_title": "Android Studio marks R in red with error message \u201ccannot resolve symbol R\u201d, but build succeeds", "answers": [{"answer_votes": "87", "answer_comments": [" Sure did buddy. \u2013 Earl Vonnstrosien-burga  Dec 8 '15 at 1:14 ", " I had a .Jpg image that i had changed to .png without proper conversion. removing that file solved the problem. odd though.. \u2013 DeathRs  May 16 '16 at 3:02 ", " I so really wanted to do this thing but Android Studio is notorious on its build. Mine will take more than 30 minutes if I did this. \u2013 Neon Warge  Aug 1 '16 at 9:26 ", " perfect solution!! \u2013 Akash Bisariya  Oct 14 '16 at 5:37  ", " Had to do this twice \u2013 Janac Meena  Dec 8 '17 at 14:49 "], "answer_body": " Just Click on Build -> Rebuild Project option in your Android Studio. ", "question_id": 17421104}, {"answer_votes": "48", "answer_comments": [" Just helping whoever's reading. It is likely something in the XML files that is causing the error. For me, (not sure why) but it was caused by a fragment layout line: android:layout_bottom=\"@id/my_list\" Simply switching from this line from one fragment to use layout_top on another fragment. \u2013 Mingsheng  Jul 8 '15 at 14:47 ", " Same thing for me! Thanks for the help \u2013 Michael  Nov 15 '16 at 6:27 ", " Same here! Thank you. \u2013 Teddy Wilson  Jan 10 '17 at 15:21 ", " Great answer! Thanks \u2013 Berat Ey\u00fcbo\u011flu  Sep 19 '17 at 14:26 "], "answer_body": " I found that this issue was caused because I had errors in my XML files. Once you fix the XML errors, do a clean/build, it fixed the issue. ", "question_id": 17421104}, {"answer_votes": "39", "answer_comments": [" This works. I have encountered the error after upgrading gradle version. \u2013 Vaquita  Mar 28 '17 at 3:24 ", " My situation was: every clean made all R become errors, every build fixed it, but of course 'uncleans' the project. After following this answer I could finally clean the project without getting errors. \u2013 talz  Feb 21 at 18:27 "], "answer_body": " Click on Build -> Rebuild Project and then\nclick Tools -> Android -> Sync Project with Gradle Files . ", "question_id": 17421104}, {"answer_votes": "28", "answer_comments": [" Thanks!  I was making a small experiment with package rename for forgott about it... \u2013 tom  Jun 21 '16 at 17:38 "], "answer_body": " Make sure in your AndroidManifest.xml the package name is correct. That fixed the problem for me when my R.whatever was marked red!  I would also recommend checking all your gradle files to make sure those package names are correct. That shouldn't make everything red, but it will stop your gradle files from syncing properly. ", "question_id": 17421104}, {"answer_votes": "8", "answer_comments": [" This is not relevant any more, but note that I did not have an R.java file in that folder, as you can see in my reply to Lo\u00efc. \u2013 Ilya Kogan  Aug 11 '13 at 13:28  "], "answer_body": "  Select the File > Project Structure menu option.  Press OK on the message box (Project Structure changes don't update build.gradle).  Select \"Modules\" on the \"Project Settings\" side pane.  For each module (project), check that the \"Excluded Folders\" section does not contain the \"build\" folder. If they do, press the 'x' button next to the \"build\" folder.  Press OK   You should now see the \"MyAppProject/MyApp/build/source\" folder. This should contain the \"r\" folder (where the R.java file is generated). Here, you should either see \"debug\", \"release\" in blue (if you have a projectFlavour in your build.gradle, these will be under the \"\" folder). Within that debug/release folder should be your app's package name and then an R.java file that contains all your resource ids. ", "question_id": 17421104}, {"answer_votes": "6", "answer_comments": [" Hi Lo\u00efc, I added a screenshot of the project structure to the question. As you can see, the entire res folder is marked as \"source\", and I don't have a build/source directory. Should I get it created? If so, how? \u2013 Ilya Kogan  Jul 7 '13 at 13:20 ", " well the build/source directory should get created when building as far as I can say. Android studio being an \"alpha\" version. It comes with a lots of strange things. I have 1.7.0_21. One idea would be to do a build/rebuil project . If you can run gradle from command line it might throw some errors that aren't shown in the editor. \u2013 Lo\u00efc Faure-Lacroix  Jul 7 '13 at 18:28 ", " It doesn't get created, although the project compiles and runs successfully on the device. \u2013 Ilya Kogan  Jul 9 '13 at 3:09 ", " Could you show the content of your iml files? \u2013 Lo\u00efc Faure-Lacroix  Jul 9 '13 at 13:53 ", " The iml files look very similar to yours, with the same folders included and excluded. \"file://$MODULE_DIR$/build/source/r/debug\" is included even though it does not exist. Using an external build causes other problems (the project doesn't compile at all). How do I check if I'm in release mode? \u2013 Ilya Kogan  Jul 11 '13 at 14:34  "], "answer_body": " For some reasons, Android studio use different configs for the editor and for the compiler. If it works for the compiler then it's good. If it doesn't work for the editor. (it sees unresolved files).  You need to add some directories to the source of your project. For example all resources should be marked as \"source\".  File->Project Structure  Select \"Modules\", then your project. And select the sources tab. On the right find your resources directory and click on the blue \"source\" button. Close all and it should work.  Also, you'll have to make sure that  build/source/r/debug is also a source. In I have all my build/source/*/debug marked as source.  main module .iml  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"android\" name=\"Android\">\n      <configuration>\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\n        <option name=\"ASSEMBLE_TASK_NAME\" value=\"assembleDebug\" />\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\n      </configuration>\n    </facet>\n    <facet type=\"android-gradle\" name=\"Android-Gradle\">\n      <configuration>\n        <option name=\"GRADLE_PROJECT_PATH\" value=\":SherlockHolmes\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/r/debug\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/aidl/debug\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/rs/debug\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/buildConfig/debug\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/res/rs/debug\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/r/test\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/aidl/test\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/rs/test\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/source/buildConfig/test\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/build/res/rs/test\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/aidl\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/assets\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/jni\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/rs\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/res\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/debug/resources\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/aidl\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/assets\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/jni\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/rs\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/res\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/aidl\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/assets\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/java\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/jni\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/rs\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/res\" isTestSource=\"true\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/instrumentTest/resources\" isTestSource=\"true\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/apk\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/assets\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/bundles\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/classes\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/dependency-cache\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/exploded-bundles\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/incremental\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/libs\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/manifests\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/symbols\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build/tmp\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Android 4.2.2\" jdkType=\"Android SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Sherlock.aar\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"SlidingMenu.aar\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"support-v4-13.0.0\" level=\"project\" />\n  </component>\n</module>  project iml  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"android-gradle\" name=\"Android-Gradle\">\n      <configuration>\n        <option name=\"GRADLE_PROJECT_PATH\" value=\":\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>  Black magic  Not sure about this one, but I heard it working while I'm pretty sure it shouldn't change anything. Try compiling and saving the project after commenting all lines that requires R . Then when everything is not red. Try adding them back. The strange this is that your build/source doesn't get generated.  Also this question suggest checking \"compiler use external build\"  Android Studio don't generate R.java for my import project  Side note  Also make sure that in your java code there is no. import android.r; from what you shown, everything seems fine. Just strange that the build/source isn't being created. For example, I have no build/apk. May be you're in release mode and it doesn't create those directories. ", "question_id": 17421104}, {"answer_votes": "5", "answer_comments": [" Have you tried with the latest 0.2.3 version of Android Studio? If you are still getting the issue, report this to code.google.com/p/android/issues so the Android Studio devs are aware of it and can investigate & fix the problem. \u2013 reece  Aug 11 '13 at 11:43 ", " No, I gave up on Android Studio. I love the IDE, but there are still so many bugs that it's unsuitable for working in a team. We went back to Eclipse. \u2013 Ilya Kogan  Aug 11 '13 at 11:45  ", " No problem. Because Android Studio is still in development, you need to be able to report any bugs that you find (so they can be fixed) and be tolerant of its rough edges. This is not for everyone. \u2013 reece  Aug 11 '13 at 12:13 "], "answer_body": " Here is my temporary solution until I find a better one:   Using Everything, find where R.java is created. In my case it was C:\\Program Files (x86)\\Android\\android-studio\\system\\compiler\\<project-name>.cb969c52\\.generated\\aapt\\<module-name>.6badd9a4\\production\\com\\<project-name>\\<module-name>  In the Project view, click the module and press F4. Ignore the warning.  Click \"+ Add Content Root\" and select the aforementioned folder. Make sure it's marked in blue (as a source).   After I did this, suddenly all the warnings are gone. The problem is that if you collaborate with other people, the folder name is different on each machine so be careful when synchronizing. ", "question_id": 17421104}, {"answer_votes": "5", "answer_comments": [" Incorrect xml files? Do you mean grammatical mistakes like missing angle brackets or sematic miastakes like adding the same id twice? I have opened all my xml files, and nothing seems to be wrong. \u2013 Zen  Nov 20 '15 at 11:19 ", " pls send me your xml files. \u2013 Lalit Kushwah  Nov 21 '15 at 12:00 ", " I solved it at last. It's caused by misused Unicode asset filename. None of answers has mentioned it. Should I post an issue? \u2013 Zen  Nov 21 '15 at 17:12 "], "answer_body": "  Rebuild the project.  If (1) does not work, restart the Android Studio/Eclipse.   If neither works, check all your xml files. This error occurs when your xml file is incorrect. ", "question_id": 17421104}, {"answer_votes": "4", "answer_comments": null, "answer_body": " Just go to Android Top menu list. click on Build Menu, in under Build click on Rebuild Project .  ", "question_id": 17421104}, {"answer_votes": "3", "answer_comments": [" Re-installing didn't help :( \u2013 Ilya Kogan  Jul 7 '13 at 11:19  "], "answer_body": " I had this bug few days ago, I tried looking around until I decided to re-install Android Studio. It worked for me. ", "question_id": 17421104}, {"answer_votes": "3", "answer_comments": null, "answer_body": " This worked for me:   Close and reopen project  Press \" Sync Project with Gradle file \" (is next to AVD manager icon in top menu)\nrepeat 1-2 if Gradle could not Sync for first time. (mine worked in second time).   Worked with Android Studio 1.2.2 ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": null, "answer_body": " you need to IMPORT your project R file  import <YOUR-PROJECT-PACKGENAME>.R; ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": null, "answer_body": " This error happens to me because there is an invalid input in my activity_main.xml file.   When you try to build or clean your project you will see error messages .  I resolved mine by reading those error messages , correct what is wrong in my xml file. then rebuild project . ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": null, "answer_body": " When creating a project from a sample,while not importing the existing project is good (prevents clashes with gradle, .idea, .iml, build, jars and apks, i.e. all unnecessary build-generated files), after creating a new project, copying and pasting all relevant resources, I'd recommend :  checking packages and imports from packages within the project {AndroidManifest declaration and all imports in java classes}, all resources (drawable, mip-map, layouts and menus & your build.gradle (a sample of build.gradle to use with the latest sdk can be provided on request)) to see if they are there & if declared strings and ids actually exist and have been used, after which your only error should be the question asked:  Bulid->Clean Project  Tools->Android->Sync Project with Gradle Files  File->Invalidate Caches and Restart  In worst cases restarting your machine helps.  The above should work. Feel free to ask questions if necessary,  i.e. post comments. ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": [" That helped, Thanks! \u2013 farahm  Sep 20 '16 at 7:32 ", " @faraz_ahmed_kamran anytime... \u2013 parvez rafi  Sep 20 '16 at 12:16 "], "answer_body": " this causes mainly because of errors in xml file, check your latest xml changes and rebuild it, same issue with me. ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": null, "answer_body": " I had a copy/paste reuse error in the package declaration for the manifest  <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\npackage=\"wrong.package.name\">  the Main activity name had the correct path so the manifest didn't have any checked errors.  After resolving this, the source file still showed errors although build succeeded.  I just ran app and then the source error indicators cleared up. ", "question_id": 17421104}, {"answer_votes": "2", "answer_comments": [" One day for no apparent reason my app just breaks... errors everywhere... Thank you so much! This was very helpful! \u2013 JFreeman  Nov 21 '17 at 7:26 "], "answer_body": " I resolved it by :  1) Sync Project with gradle files\n2) Build -> Clean Project\n3) Build -> Rebuild Project\n4) File -> Invalidate caches\n\n//imp step\n5) Check your xml files properly. ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": null, "answer_body": " It has also worked for me by doing manually cleaning the folder .idea/libraries and clicking afterward on \"Sync Project with Gradle Files\" solves the problem. Apparently this Sync does not remove elements, but keep the old ones and add the current ones. Probably a bug to report :) ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": [" Where would I find the iml file? \u2013 Cappuccino90  Jul 2 '15 at 19:33 ", " same folder where your build.gradle is ... most likely \u2013 Lukas Hanacek  Jul 9 '15 at 10:45  "], "answer_body": " Had the same problem with android studio, I found out that build/generated/source/r contained only release folder and not debug. So for some reason debug build did not generate usable R class.  I solved it by opening the project iml file and fixed this line  <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"\" />  to  <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/src/main/res\" />  resynced with gradle, commented out lines using R, run debug to generate the R, uncommented lines using R and run the debug again, fixed. ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": [" Thanks, this works! I had set the minSdkVersion value to a much lower one, and reverting fixed the issue for me. \u2013 Arvindh Mani  Aug 22 '16 at 22:24 "], "answer_body": " The solution is simple:  Go to File > Project Structure > app and choose the Flavours tab, select API 21: Android 5.0 (Lollipop) in the drop down list for Min Sdk Version . ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": null, "answer_body": " Cleaning the Project helped in my case  Go to  Build -> Clean Project ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": null, "answer_body": " If you are getting this error, then clean your project.   Go to build on top of your android studio  Choose the option clean project   The reason behind this is that by cleaning your previous .apk file that is present in your android studio project folder on your system is deleted. ", "question_id": 17421104}, {"answer_votes": "1", "answer_comments": null, "answer_body": " Sometimes these build errors will continue out of nowhere. If this happens to you, try this:  Recheck the validity of the XML in your resource files\nIf your R.java file was not generated for the last build, you will see errors in your project wherever you reference a resource. This can be caused by a typo in one of your XML files. Layout XML is not always validated, so typos in these files may not be pointedly brought to your attention. Finding the typo and saving the file should cause R.java to regenerate.  Clean your project!!! Select Build \u2192 Clean Project. This will rebuild the project from scratch, which may result in an error-free build.  Sync your project with Gradle!!! Select Tools \u2192 Android \u2192 Sync Project with Gradle Files. Android Studio will rebuild the project from scratch with the correct project settings, which can help to resolve issues after changing your Gradle configuration.  Run Android Lint!!! Lint may give you good information regarding a problem. If the above does not work, this is where you will most likely find your problem.  To run Lint, select Analyze \u2192 Inspect Code...  then select Whole project and OK. \nCarefully analyze Lint suggestions; start with errors and then warnings.  Good luck. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I ran into the same error, turns out that the manifest file had some errors. After fixing it, clicked Make Project again, it worked fine. Android studio sometimes do not give very helpful error messages. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I get bitten by this every now and then and there's another thing to try: match your compileSdk and buildSdk versions to the latest available.  I had changed my compileSdkVersion from 21 back to 19 because the Android Studio (1.1 canary channel) debugger was not tracing properly into prebuilt libraries. I found that it seemed to be tracing based on the buildToolsVersion (19.1.0), which I verified by clicking an error in the stack trace (and then choosing 19 instead of 21). Though I changed it directly in the build.gradle file, a graphical walkthrough is here: https://www.blogger.com/comment.g?blogID=4722727826918942842&postID=3875998513888772255 and I'll summarize:   Android Studio IDE, select File | Project Structure.  Choose your module, like \"app\"  In Compile SDK field, choose the latest version  Also choose the latest version in Build Tools   Confirm, and the project should automatically sync properly.  The lesson I'm getting from this is that they should both be the same. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " For me I had this problem after I changed the name of one of my raw resources from extra to extra.jet , then all R s became red and it wouldn't build.\nI tried all the above solutions and nothing worked, then i tried to make another copy of it with the original name extra and deleted it from within android studio then R s returned back to normal and build succeeded. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " In my case, I followed all answers I could find on Stackoverflow and none of them seemed to solve this problem. All the answers would point to a possible xml file corruption or conflict with Gradle names. Some answers claimed that it would be necessary to clean the project or Sync Project With Gradle files. none of these solutions would solve the problem. Also, once I was following a tutorial on how to build a Hello World app and I just followed the Android Studio wizard windows without any coding at all, it wouldn't make any sense to suspect it was a typo ar anything like this.  TLDR  The problem turned out to be the Build Tools Version. My was set to 23.0.0 rc1 , so I changed it to 22.0.1 . I suppose it was because I'm using the last available release of Android Available.  To change this value you can open your Project browser on the left window > right click \"app > Open Module Setting\" and look for it on the \"Properties Tab\" ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I had same problem while using exercise files from a training website and tried resolving the problem by uninstalling android studio and deleting all associated directories and reinstalling it but this yielded no result. However, I noticed that The tutorial i was viewing stored its exercise files on the DESKTOP while mine was in a folder in my DOWNLOADS directory so I Simply copied all exercise files to my Desktop; this made my exercise folder structure identical to that of the tutorial creator and this did the trick. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " In most cases, there is some problems with your resources, i.e. layouts, styles, etc. so try to find and fix the problem in your resources then clean your project. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": [" Thanks a lot , It saved my precious time searching for errors \u2013 ajinkya gaurkar  Feb 8 '16 at 6:36 "], "answer_body": " The better way to resolve this problem is to restart your Android Studio.\nIf you don't want to do a restart, then click on Build -> Clean Project . ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I had this issue too. I deleted the extra images from my project's drawable folder. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " This problem occurs when you rename the package name . After renaming the package name, you must change the older package name to the newer one.  For me it solved the problem once I changed that.  After that, you might get errors in xml files , that you have to change the package name there also. That's it. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " The problem is that R is a pojo file generated when you build the project and it consist of references to resources in the res directory such as strings, drawable (icons or images) xml layouts etc. You may find it interesting to read the R.java file although you may have to exit android studio to do so. You may find it helpful to ignore this type of error because when you compile and build it will go away.  What not to do is import the R file ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": "  Android studio-> Build -> Make Project Or Make Module 'xxx' fix the problem.  Yes, run app can not fix the problem...  Yes, clean can not fix the problem...  Yes, File -> Invalidate cache can not fix the problem...  by the way, should I use yes? or may be no is right in English?  ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Issue : Android Studio marks R in red with error message \u201ccannot resolve symbol R\u201d  Solution : I resolved the 'R' error by adding the following to the import & then rebuilding the project and the error went away.  import com.mkyong.android.R;  Explanation : Sometimes the Android Studio does not add the import even when you do build multiple times or run the 'optimize import' command. Sometimes the error is resolved when you 'restart Android Studio' but at times even after restarting Android Studio multiple times the error remains.\nThanks. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " When I was beginner at Android studio ,this was general issue I face through .\nGenerally the problem arises when the R.java files during conversion of hex code properly donot recognize the appropriate magic number .\nSo we should kept in mind that all the XML files are properly wriiten.This is oftenly arises due to problem in XML files .\nGo in each XML files n be sure all the files are true means valid .\nThen go to File and synchronize the project .My error remove many times by such steps . ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Just add this sentence in your build.gradle:  compile 'com.android.support:design:23.1.1' ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " You have to change the path: for example  import it.example.project.myproject.R;  change in  import it.example.project.R; ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " One thing which works for me every time is:  go to --> build.gradle (Module: app) file of your project --> do a little change (for example: put a space somewhere and remove it back) --> then android studio will ask you to sync your gradle file--> at top right corner of the file --> select \"sync now\".  After syncing completes, it'll resolve the issue in most of the cases. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " This happened to me, \ni found it was caused by some cache files which were invalid.\nso i disabled cache by adding  android.enableBuildCache=false  to gradle properties. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I had the same problem when I added some image files in drawable folder, where the files name was in 'Uppercase'.I renamed them to normal format name and pressed rebuild project. It worked for me. ", "question_id": 17421104}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I had a similar issue for weeks but i had the design lib version with + in my build.gradle which made it download the latest version. So i set it to  the version of the package and it worked. ", "question_id": 17421104}, {"answer_votes": "-1", "answer_comments": null, "answer_body": " It's Very important to know that android studio\nhas two type of import   java import type  android studio innere import type   and our problem with android import type as import android.R  it's work good? but you did't import android.R?  android studio add this automatic but with different syntax  to solve our problem   firstly you need to make a new project \"Blank\"  then copy all files from your first project to the new project except java files  then you need to make new java class with the same name   and Easily copy the all contents of you Activity java class   \"Don't copy modules and package only copy the content of class\"  and don't forget to add extends .... to your class   you will see message ask you to import some of modules  you must deselect android.R and press OK  it's will work correctly   \" If you find android.R only at the dialog box you must click cancel\"   //See Next Image  Select Class To Import  if you don't know exactly where the java class file which cased this problem\ndo this solution with all java file in your project   //Good Luck \n@ ABT ", "question_id": 17421104}, {"answer_votes": "-2", "answer_comments": null, "answer_body": " Delete the view whose resource (background...etc) you just defined and sync the Gradle files. If that doesn't work, delete the activity you were recently working on and then sync the Gradle files. ", "question_id": 17421104}], "question_body": " In every project I've tried to create in Android Studio, all usages of R are marked in red with the error message \"cannot resolve symbol R\", but the compilation succeeds and the application runs. This is really annoying, as it blocks auto-completion and shows huge red waved lines all over my code.  I'm running Android Studio 1.7.0 and creating the project with default settings. A screenshot is attached:   This is my :   This is how the Project Structure looks like:   Any idea how to fix this? ", "question_code": ["build.gradle", "buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:0.4'\n    }\n}\napply plugin: 'android'\n\ndependencies {\n    compile files('libs/android-support-v4.jar')\n}\n\nandroid {\n    compileSdkVersion 17\n    buildToolsVersion \"17.0.0\"\n\n    defaultConfig {\n        minSdkVersion 7\n        targetSdkVersion 16\n    }\n}\n"], "question_id": 17421104}