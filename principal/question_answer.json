{"question_comments": [" Please post the schema for the parent tables: and . \u2013 Ike Walker  Jun 6 '13 at 18:08 ", " possible duplicate of MySQL error cannot add foreign key constraint \u2013 Denis de Bernardy  Jun 6 '13 at 18:09 ", " @Denis it's probably not a duplicate since the OP says they have verified that the columns are PKs in the parent tables. \u2013 Ike Walker  Jun 6 '13 at 18:22 ", " I've added the SQL statements for the Clients and Staff tables as requested. \u2013 Robert B  Jun 10 '13 at 14:03 ", " Possible duplicate of MySQL Cannot Add Foreign Key Constraint \u2013 Prometheus  Dec 11 '16 at 14:56 "], "question_title": "MySQL Error 1215: Cannot add foreign key constraint", "answers": [{"answer_votes": "390", "answer_comments": [" Thanks.  This turned out to be the issue.  Staff.Emp_ID was a SMALLINT, while the referencing column was an INT.  Sometimes it's the little things... \u2013 Robert B  Jun 10 '13 at 14:08 ", " Tks. In my case I had accidentally clicked \"ZeroFill\" on the foreign key in the child table which meant it did not match exactly with the parent table's column. \u2013 wwkudu  Oct 12 '14 at 4:55 ", " It could also be that the character set is different. I hade this problem where one column had the utf8 character set while the other had latin1. Easily fixed with ALTER TABLE Table CHARACTER SET = utf8 ; and ALTER TABLE Device CHANGE COLUMN ID  ID CHAR(36) CHARACTER SET 'utf8' NOT NULL; \u2013 www.jensolsson.se  May 26 '15 at 8:19  ", " @www.jensolsson.se You are correct, if the PK includes one or more string columns then they must use the same character set and collation. In this specific case the PK was an INT so the character set of the table and/or columns was not relevant. \u2013 Ike Walker  May 27 '15 at 17:42 ", " For me, the problem was INT vs UNSIGNED INT!!! \u2013 Felipe Baytelman  Sep 25 '15 at 0:17 "], "answer_body": " I'm guessing that Clients.Case_Number and/or Staff.Emp_ID are not exactly the same data type as Clients_has_Staff.Clients_Case_Number and Clients_has_Staff.Staff_Emp_ID .  Perhaps the columns in the parent tables are INT UNSIGNED ?  They need to be exactly the same data type in both tables. ", "question_id": 16969060}, {"answer_votes": "157", "answer_comments": [" I'll just add that if the FK is on a character column, I think they need to be of the same charset and collation. (Or possibly 1-byte and 2-byte charsets are not compatible.) \u2013 Graham Charles  Jan 21 '14 at 1:31 ", " Great and simple answer! Everyone debugging error 1215 should start from here. I added some more subtle cases to look out for , in case your error is not caused by any of these points. \u2013 Domi  Dec 1 '14 at 8:57  ", " My reason was your pointed out first one \"Different DB Engines for two tables, InnoDB and MyISAM\" \u2013 Kasun Randika  Jul 21 '15 at 14:52 ", " I got another one reason =)  ``` ON DELETE CASCADE ON UPDATE SET NULL:```  You have defined a SET NULL condition though some of the columns are defined as NOT NULL.  So, i just fix FK definition. \u2013 alexglue  Nov 18 '15 at 15:53  ", " nice, the 4th point was my problem. It's kind of nasty - but I'm very very happy mysql did crash for that \u2013 Sebas  Jun 16 '16 at 15:21 "], "answer_body": " Reasons you may get a foreign key constraint error:   You are not using InnoDB as the engine on all tables.  You are trying to reference a nonexistent key on the target table.  Make sure it is a key on the other table (it can be a primary or unique key)  The types of the columns are not the same (exception is the column on the referencing table can be nullable).  If the PK/FK is a varchar make sure the collation is the same for both.   Update:   One of the reasons may also be that the column you are using for ON DELETE SET NULL is not defined to be null. So make sure that the column is set default null.   Check these. ", "question_id": 16969060}, {"answer_votes": "59", "answer_comments": [" This is the best answer i think cause it helps in diagnostic! Thanks. \u2013 alexglue  Nov 18 '15 at 15:52 ", " How should that work? Execute both queries in a row? \u2013 C4u  Mar 17 '16 at 15:19 ", " @C4u, yes we should execute both queries in a row by having SHOW ENGINE INNODB STATUS as first and then followed by other queries \u2013 sureshd  Sep 1 '16 at 14:50 ", " Doing it on PHPMyAdmin won't work. do it on the command prompt. \u2013 ruwan800  Mar 21 '17 at 6:44 "], "answer_body": " For others same error may not always be due to column type mismatch, you can find out more information about a mysql foriegn key error by issuing command  SHOW ENGINE INNODB STATUS;  you may find a error near the top of the printed message something like   Cannot find an index in the referenced table where the\n  referenced columns appear as the first columns, or column types\n  in the table and the referenced table do not match for constraint.  ", "question_id": 16969060}, {"answer_votes": "12", "answer_comments": [" You will also get this error if you try to delete a foreign key that is not there :) \u2013 Explosion Pills  Dec 1 '14 at 16:09 ", " Also, from the docs: MySQL requires indexes on foreign keys and referenced keys so that foreign key checks can be fast and not require a table scan. In the referencing table, there must be an index where the foreign key columns are listed as the first columns in the same order . Such an index is created on the referencing table automatically if it does not exist. This index might be silently dropped later, if you create another index that can be used to enforce the foreign key constraint. index_name, if given, is used as described previously. \u2013 Jonathan M  Jan 13 '15 at 18:03 ", " That's the reason I came here: I tried to create a foreign key ON DELETE SET NULL on a column I wanted to be NOT NULL . Suppose you can't have your cake and eat it, too. \u2013 Martin Hennings  Oct 16 '15 at 7:26 "], "answer_body": " Error 1215 is an annoying one. Explosion Pill's answer covers the basics. You want to make sure to start from there. However, there are more, much more subtle cases to look out for:  For example, when you try to link up PRIMARY KEYs of different tables, make sure to provide proper ON UPDATE and ON DELETE options. E.g.:  ...\nPRIMARY KEY (`id`),\nFOREIGN KEY (`id`) REFERENCES `t` (`other_id`) ON DELETE SET NULL\n....  won't fly, because PRIMARY KEYs (such as id ) can't be NULL .  I am sure, there are even more, similarly subtle issues when adding these sort of constraints, which is why when coming across constraint errors, always make sure that the constraints and their implications make sense in your current context. Good luck with your error 1215! ", "question_id": 16969060}, {"answer_votes": "6", "answer_comments": null, "answer_body": " In my case, I had deleted a table using SET FOREIGN_KEY_CHECKS=0 , then SET FOREIGN_KEY_CHECKS=1 after.  When I went to reload the table, I got error 1215 .  The problem was there was another table in the database that had a foreign key to the table I had deleted and was reloading.  Part of the reloading process involved changing a data type for one of the fields, which made the foreign key from the other table invalid, thus triggering error 1215 .  I resolved the problem by dropping and then reloading the other table with the new data type for the involved field. ", "question_id": 16969060}, {"answer_votes": "5", "answer_comments": null, "answer_body": " There is a pitfall I have experienced with \"Error 1215: Cannot add foreign key constraint\" when using Laravel 4, especially with JeffreyWay's Laravel 4 Generators.  In Laravel 4, you can use JeffreyWay's Generators to generate migration files to create tables one-by-one, which means, each migration file generates one table.\nYou have to be aware of the fact that each migration file is generated with a timestamp in the filename, which gives the files an order. The order of generation is also the order of migration operation when you fire the Artisan CLI command \"php artisan migrate\".\nSo, if a file asks for a foreign key constraint referring to a key which will be, but not yet, generated in a latter file, the Error 1215 is fired.\nIn such case, what you have to do is adjust the order of migration files generation. Generate new files in proper order, copy-in the content, then delete the disordered old files. ", "question_id": 16969060}, {"answer_votes": "4", "answer_comments": null, "answer_body": " I got the same error while trying to add an fk. In my case the problem was caused by the FK table's PK which was marked as unsigned. ", "question_id": 16969060}, {"answer_votes": "3", "answer_comments": null, "answer_body": " Check the collation of table, using SHOW TABLE STATUS you can check information about the tables, including the collation.  Both tables have to has the same collation.  It's happened to me. ", "question_id": 16969060}, {"answer_votes": "3", "answer_comments": null, "answer_body": " I had the same problem. I solved it doing this:  I created the following line in the  primary key: (id int(11) unsigned NOT NULL AUTO_INCREMENT)  I found out this solution after trying to import a table in my schema builder. If it works for you, let me know!  Good luck!  Felipe T\u00e9rcio ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": null, "answer_body": " I can not find this error  CREATE TABLE RATING (\n\nRiv_Id INT(5),\nMov_Id INT(10) DEFAULT 0,\nStars INT(5),\nRating_date DATE, \n\nPRIMARY KEY (Riv_Id, Mov_Id),\n\nFOREIGN KEY (Riv_Id) REFERENCES REVIEWER(Reviewer_ID)\nON DELETE SET NULL ON UPDATE CASCADE,\n\nFOREIGN KEY (Mov_Id) REFERENCES MOVIE(Movie_ID)\nON DELETE SET DEFAULT ON UPDATE CASCADE\n) ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": [" You forgot a couple of commas in your first CREATE \u2013 DLight  Nov 3 '16 at 14:06 "], "answer_body": " i had the same issue, my solution:  Before:  CREATE TABLE EMPRES\n( NoFilm smallint NOT NULL\n\n  PRIMARY KEY (NoFilm)\n\n  FOREIGN KEY (NoFilm) REFERENCES cassettes\n\n);  Solution:  CREATE TABLE EMPRES\n(NoFilm smallint NOT NULL REFERENCES cassettes,\n\n PRIMARY KEY (NoFilm)\n\n);  I hope it's help ;) ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": null, "answer_body": " This also happens when the type of the columns is not the same.  e.g. if the column you are referring to is UNSIGNED INT and the column being referred is INT then you get this error. ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": null, "answer_body": " For MySQL (INNODB) ... get definitions for columns you want to link  SELECT * FROM information_schema.columns WHERE \nTABLE_NAME IN (tb_name','referenced_table_name') AND \nCOLUMN_NAME  IN ('col_name','referenced_col_name')\\G  compare and verify both column definitions have   same COLUMN_TYPE(length), same COLATION   could be helpfull to play like  set foreign_key_checks=0;\nALTER TABLE tb_name ADD FOREIGN KEY(col_name) REFERENCES ref_table(ref_column) ON DELETE ...\nset foreign_key_checks=1; ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": null, "answer_body": " Check for table compatibility.  For example, if one table is MyISAM and the other one is InnoDB , you may have this issue. ", "question_id": 16969060}, {"answer_votes": "2", "answer_comments": null, "answer_body": " Another reason: if you use ON DELETE SET NULL  all columns that are used in the foreign key must allow null values. Someone else found this out in this question .  From my understanding it wouldn't be a problem regarding data integrity, but it seems that MySQL just doesn't support this feature (in 5.7). ", "question_id": 16969060}, {"answer_votes": "1", "answer_comments": null, "answer_body": " When this error occurrs because the referenced table uses the MyISAM engine this answer provides a quick way to convert your database so all Django model tables use InnoDB: https://stackoverflow.com/a/15389961/2950621  It's a Django management command called convert_to_innodb. ", "question_id": 16969060}, {"answer_votes": "1", "answer_comments": null, "answer_body": " For me it was the column types. BigINT != INT.  But then it still didn't work.  So I checked the engines. Make sure Table1 = InnoDB and Table = InnoDB ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Even i had the same problem . And the fault was with the \"unsigned\" marker in the FK's table PK ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Wooo I just got it ! It was a mix of a lot of already posted answers (innoDB, unsigned, etc). One thing I didn't see here though is : if your FK is pointing on a PK, ensure the source column has a value that makes sense. For example, if the PK is a mediumint(8), make sure the source column also contains a mediumint(8). That was part of the problem for me. ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Be aware of the use of backquotes too. I had in a script the following statement  ALTER TABLE service ADD FOREIGN KEY (create_by) REFERENCES `system_user(id)`;  but the backquotes at the end were false. It should have been:  ALTER TABLE service ADD FOREIGN KEY (create_by) REFERENCES `system_user`(`id`);  MySQL give unfortunalty no details on this error... ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": [" What do you mean by that? \u2013 Yazan Jaber  Feb 22 '17 at 11:06 ", " @YazanJaber I think he means this : InnoDB permits a foreign key to reference any index column or group of columns. However, in the referenced table, there must be an index where the referenced columns are listed as the first columns in the same order. \u2013 robsch  Mar 6 '17 at 9:53 "], "answer_body": " I experienced this error for a completely different reason. I used MySQL Workbench 6.3 for creating my Data Model (awesome tool). I noticed that when the column order defined in the Foreign Key constraint definition does not fit the table column sequence this error is also generated.  It took me about 4 hours of trying everything else but checking that.  Now all is working well and I can get back to coding. :-) ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " Another source of this error is that you have 2 or more same table names which have the same foreign key names. This sometimes happens to people who use modelling and design software, like Mysql Workbench, and later generate the script from the design. ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " when try to make foreign key when using laravel migration  like this example:  user table  public function up()\n{\n    Schema::create('flights', function (Blueprint $table) {\n        $table->increments('id');\n        $table->string('name');\n        $table->TinyInteger('color_id')->unsigned();\n        $table->foreign('color_id')->references('id')->on('colors');\n        $table->timestamps();\n    });\n}  colors table  public function up()\n{\n    Schema::create('flights', function (Blueprint $table) {\n        $table->increments('id');\n        $table->string('color');\n        $table->timestamps();\n    });\n}  sometimes properties didn't work  [PDOException]\nSQLSTATE[HY000]: General error: 1215 Cannot add foreign key constraint  this error happened because the foreign key (type) in [user table]   is deferent from primary key (type) in [colors table]  To solve this problem should change the primary key in [colors table]  $table->tinyIncrements('id');   When you use primary key $table->Increments('id');  you should use Integer as a foreign key  $table-> unsignedInteger('fk_id');\n    $table->foreign('fk_id')->references('id')->on('table_name');   When you use primary key $table->tinyIncrements('id');  you should use unsignedTinyInteger as a foreign key  $table-> unsignedTinyInteger('fk_id');\n    $table->foreign('fk_id')->references('id')->on('table_name');   When you use primary key $table->smallIncrements('id');  you should use unsignedSmallInteger as a foreign key  $table-> unsignedSmallInteger('fk_id');\n    $table->foreign('fk_id')->references('id')->on('table_name');   When you use primary key $table->mediumIncrements('id');  you should use unsignedMediumInteger as a foreign key  $table-> unsignedMediumInteger('fk_id');\n    $table->foreign('fk_id')->references('id')->on('table_name'); ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " I know i am VERY late to the party but i want to put it out here so that it is listed.  As well as all of the above advice for making sure that fields are identically defined, and table types also have the same collation, make sure that you don't make the rookie mistake of trying to link fields where data in the CHILD field is not already in the PARENT field. If you have data that is in the CHILD field that you have not already entered in to the PARENT field then that will cause this error. It's a shame that the error message is not a bit more helpful.  If you are unsure, then backup the table that has the Foreign Key, delete all the data and then try to create the Foreign Key. If successful then you what to do!  Good luck. ", "question_id": 16969060}, {"answer_votes": "0", "answer_comments": null, "answer_body": " This is a subtle version of what has already been said, but in my instance, I had 2 databases (foo and bar).  I created foo first and I didn't realize it referenced a foreign key in bar.baz (which wasn't created yet).  When I tried to create bar.baz (without any foreign keys), I kept getting this error.  After looking around for a while I found the foreign key in foo.  So, long story short, If you get this error, you may have a pre-existing foreign key to the table being created. ", "question_id": 16969060}, {"answer_votes": "-5", "answer_comments": [" This does not fix the issue at all. \u2013 James111  Jul 6 '15 at 9:40 "], "answer_body": " I had the same error once. I just simply restarted the MySQL server and fixed the problem. ", "question_id": 16969060}], "question_body": " I am trying to forward engineer my new schema onto my db server, but I can't figure out why I am getting this error.  I've tried to search for the answer here, but everything I've found has said to either set the db engine to Innodb or to make sure the keys I'm trying to use as a foreign key are primary keys in their own tables.  I have done both of these things, if I'm not mistaken.  Any other help you guys could offer?   SQL script execution finished: statements: 7 succeeded, 1 failed  Here is the SQL for the parent tables.  ", "question_code": ["Executing SQL script in server\n\nERROR: Error 1215: Cannot add foreign key constraint\n\n-- -----------------------------------------------------\n-- Table `Alternative_Pathways`.`Clients_has_Staff`\n-- -----------------------------------------------------\n\nCREATE  TABLE IF NOT EXISTS `Alternative_Pathways`.`Clients_has_Staff` (\n  `Clients_Case_Number` INT NOT NULL ,\n  `Staff_Emp_ID` INT NOT NULL ,\n  PRIMARY KEY (`Clients_Case_Number`, `Staff_Emp_ID`) ,\n  INDEX `fk_Clients_has_Staff_Staff1_idx` (`Staff_Emp_ID` ASC) ,\n  INDEX `fk_Clients_has_Staff_Clients_idx` (`Clients_Case_Number` ASC) ,\n  CONSTRAINT `fk_Clients_has_Staff_Clients`\n    FOREIGN KEY (`Clients_Case_Number` )\n    REFERENCES `Alternative_Pathways`.`Clients` (`Case_Number` )\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Clients_has_Staff_Staff1`\n    FOREIGN KEY (`Staff_Emp_ID` )\n    REFERENCES `Alternative_Pathways`.`Staff` (`Emp_ID` )\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB\n", "CREATE  TABLE IF NOT EXISTS `Alternative_Pathways`.`Clients` (\n  `Case_Number` INT NOT NULL ,\n  `First_Name` CHAR(10) NULL ,\n  `Middle_Name` CHAR(10) NULL ,\n  `Last_Name` CHAR(10) NULL ,\n  `Address` CHAR(50) NULL ,\n  `Phone_Number` INT(10) NULL ,\n  PRIMARY KEY (`Case_Number`) )\nENGINE = InnoDB\n\nCREATE  TABLE IF NOT EXISTS `Alternative_Pathways`.`Staff` (\n  `Emp_ID` INT NOT NULL ,\n  `First_Name` CHAR(10) NULL ,\n  `Middle_Name` CHAR(10) NULL ,\n  `Last_Name` CHAR(10) NULL ,\n  PRIMARY KEY (`Emp_ID`) )\nENGINE = InnoDB\n"], "question_id": 16969060}