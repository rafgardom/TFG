{"question_comments": [" just tested: your way is actually the fastest for across browsers: jsperf.com/find-element-in-obj-vs-array/2 (apart from pre-saving a.length in a variable) while using indexOf (as in $.inArray) is much slower \u2013 J\u00f6rn Berkefeld  Jul 2 '12 at 11:56 ", " many have replied that the Array#indexOf is your best choice here. But if you want something that can be correctly cast to Boolean, use this: will return 0 which will evaluate as false, whereas will return -3 which will evaluate as true. \u2013 lordvlad  Oct 2 '13 at 7:59 ", " is not what you want to use to convert to a boolean, for that you need . But in this case you want to check equality with -1, s o the function might end  is a binary not, it will invert each bit of the value individually. \u2013 mcfedr  Jun 20 '14 at 12:49 ", " IE9 supports as per w3schools.com/jsref/jsref_indexof_array.asp . If older browser better approach is to define for function as given in Array.indexOf in Internet Explorer \u2013 Lijo  Jan 21 '15 at 21:42  ", " @Iordvlad will actually return -1 . As @mcfedr pointed out, is the bitwise-NOT operator , see ES5 11.4.8. Thing is, since the binary representation of consists of only 1's, it's complement is , which evaluates as false. The complement of any other number will be non-zero, hence true. So, works just fine and is often used in conjunction with . \u2013 mknecht  Mar 14 '15 at 5:35  "], "question_title": "How do I check if an array includes an object in JavaScript?", "question_code": ["function contains(a, obj) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n", "indexOf"], "question_body": " What is the most concise and efficient way to find out if a JavaScript array contains an object?  This is the only way I know to do it:   Is there a better and more concise way to accomplish this?  This is very closely related to Stack Overflow question Best way to find an item in a JavaScript Array? which addresses finding objects in an array using . "}